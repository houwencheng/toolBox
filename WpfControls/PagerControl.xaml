<UserControl x:Class="WpfControls.PagerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfControls"
             mc:Ignorable="d" 
             x:Name="UserControl"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ControlTemplate x:Key="stlToggleButtonTemplate" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}"
                BorderThickness="0">
                <Path Name="PathFill" 
                Fill="{TemplateBinding Foreground}" 
                Width="8" 
                Height="6" 
                StrokeThickness="10" 
                Data="M5,0 L10,10 L0,10 z"
                RenderTransformOrigin="0.5,0.5" 
                Stretch="Fill">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="PathFill" Property="Opacity" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="selfComboxControlTemplate" TargetType="ComboBox">
            <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness ="{TemplateBinding BorderThickness}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                Padding="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" 
                        IsReadOnly="True" 
                        Text="{TemplateBinding Text}" 
                        FontSize="{TemplateBinding FontSize}"
                        Foreground="{TemplateBinding Foreground}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"/>
                    <ToggleButton Grid.Column="1"
                            Template="{DynamicResource stlToggleButtonTemplate}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            ClickMode="Press"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            BorderThickness="0"/>
                    <Popup IsOpen="{TemplateBinding IsDropDownOpen}" 
                        Placement="Bottom" 
                        x:Name="Popup" 
                        Focusable="False" 
                        AllowsTransparency="True" 
                        PopupAnimation="Slide">
                        <Border CornerRadius="1" 
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                            MinWidth="{TemplateBinding ActualWidth}" 
                            x:Name="DropDown" 
                            SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" 
                                            BlurRadius="2" 
                                            ShadowDepth="0" 
                                            Opacity="0.5"/>
                            </Border.Effect>
                            <ScrollViewer Margin="4,6,4,6" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    SnapsToDevicePixels="True" 
                                    HorizontalScrollBarVisibility="Auto"
                                    VerticalScrollBarVisibility="Auto" 
                                    CanContentScroll="True"
                                    Background="{TemplateBinding Background}">
                                <ItemsPresenter 
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="txtBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                MinWidth="{TemplateBinding MinWidth}"
                                x:Name="bd"
                                Opacity="1">
                            <ContentControl x:Name="content" Content="{TemplateBinding Button.Content}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{Binding   ElementName=content,Path=Foreground}"/>
                                <Setter TargetName="content" Property="Foreground" Value="{Binding   ElementName=bd,Path=Background}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Tag}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{Binding   ElementName=content,Path=Foreground}"/>
                                <Setter TargetName="content" Property="Foreground" Value="{Binding   ElementName=bd,Path=Background}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding ElementName=UserControl,Path=Foreground}"/>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource txtBtn}">
            <Setter Property="Foreground" Value="{Binding ElementName=UserControl,Path=Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="20" />
        </Style>
        
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{Binding ElementName=UserControl,Path=Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{Binding ElementName=UserControl,Path=Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight" Height="30">
        <!--第一页-->
        <Button Click="FirstPageBtn_Click" Content="第一页"/>
        <!--上一页-->
        <Button Click="PrePageBtn_Click" Content="上一页"/>

        <!--数字按钮区-->
        <StackPanel Name="numberBtnStackPanel" Orientation="Horizontal"/>

        <!--下一页-->
        <Button Click="NextPageBtn_Click" Content="下一页"/>

        <!--最后一页-->
        <Button Click="LastPageBtn_Click" Content="最后页"/>


        <!--跳转-->
        <TextBlock Text="跳转到" Margin="20,0,0,0" />
        <TextBox KeyDown="GotoPage_KeyDown" Width="50" Margin="5,0" Padding="2" VerticalAlignment="Center"/>
        <TextBlock Text="页"/>

        <!--每页显示数量-->
        <TextBlock Text="每页显示" Margin="20,0,0,0"/>
        <ComboBox Margin="5,0"
                  Padding="2"
                  Background="Transparent"
                  VerticalAlignment="Center" 
                  Name="pageSizeCombo" 
                  SnapsToDevicePixels="True"
                  Template="{DynamicResource selfComboxControlTemplate}" 
                  SelectionChanged="ComboBox_SelectionChanged">
            <ComboBoxItem Content="5"/>
            <ComboBoxItem Content="10"/>
            <ComboBoxItem Content="15"/>
            <ComboBoxItem Content="20"/>
            <ComboBoxItem Content="25"/>
        </ComboBox>
        <TextBlock Text="条"/>

        <!--总条数-->
        <TextBlock Text="共" Margin="20,0,0,0"/>
        <TextBlock Name="totalTb" Margin="5,0"/>
        <TextBlock Text="条"/>
    </StackPanel>
</UserControl>
